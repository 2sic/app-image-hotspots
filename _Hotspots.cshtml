@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Services;
@{
  // Get some helper commands for later on
  var helpers = CreateInstance("Helpers.cs");

  // Merge the settings on Content with the predefined Settings
  var hotspots = Content; // give it a nicer name so the code is easier to read
  var sharedSettings = AsDynamic(hotspots, Settings);
  var moduleId = CmsContext.Module.Id;

  // define dom attribute for fancybox
  var fancyboxAttribute = "app-gallery7-fancybox-" + CmsContext.Module.Id; 

  var imgSvc = GetService<IImageService>();
}

@* The visible parts - image and dots to click on *@
<div class="app-hotspot3" @Edit.TagToolbar(hotspots)>
  <div class="hotspots" @helpers.EditAttr(moduleId, hotspots, sharedSettings) >
    @* The hotspot dots/icons to click on *@
    @foreach (var marker in sharedSettings.Hotspots) {
      // Merge settings of marker, hotspot-set and defaults to always take the best option
      var markerSettings = AsDynamic(marker, hotspots, Settings);

      <div class="hotspot3-marker" style="@helpers.MarkerStyles(marker, markerSettings)" @fancyboxAttribute data-src='#hotspot3-content-@marker.EntityId-@moduleId'>
        @imgSvc.Picture(markerSettings.HotspotMarker.HotspotIcon, settings: Settings.Images.Hotspots, imgAlt: marker.Title, imgClass: "heartbeat")
      </div>
    }

    @* The main image, on which the the hotspots are placed - will adhere to "Content" image conventions *@
    @{
      var pictureClass = hotspots.IsDemoItem ? "" : "hotspot3-js-image";
      var hotspotImgClass = pictureClass + "hotspot3-image";
    }
    @imgSvc.Picture(hotspots.Image, settings:sharedSettings.Images.Content, imgClass:hotspotImgClass)
  </div>
</div>

@Html.Partial("_Hotspots.PartLayers.cshtml", new { HotspotsSettings = sharedSettings })
@Html.Partial("_Hotspots.PartAssets.cshtml", new { FancyboxAttribute = fancyboxAttribute })
